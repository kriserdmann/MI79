# Q&A Rápido: Metodologias Ágeis

Instruções: Preencha o campo [RESPOSTA A SER PREENCHIDA] para cada pergunta que você reivindicou.

---
### Bloco 01: Manifesto e Conceitos Gerais
---

P01: O que é o Manifesto Ágil?
R01: [RESPOSTA A SER PREENCHIDA]

P02: Quantos valores principais o Manifesto Ágil possui?
R02: O Manifesto Ágil Possui 4 valores principais:
Indivíduos e interações mais que processos e ferramentas,
Software em funcionamento mais que documentação abrangente,
Colaboração com o cliente mais que negociação de contratos,
Responder a mudanças mais que seguir um plano;

P03: Cite um dos quatro valores do Manifesto Ágil.
R03: Indivíduos e interações mais que processos e ferramentas.

(*Outros valores também aceitáveis:

Software em funcionamento mais que documentação abrangente;

Colaboração com o cliente mais que negociação de contratos;

Responder a mudanças mais que seguir um plano.*)

P04: Qual o principal benefício de entregar software funcional com frequência?
R04: Permite obter feedback rápido dos usuários, adaptar o produto às necessidades reais e reduzir riscos ao longo do projeto.

P05: Agile é uma metodologia ou uma mentalidade (mindset)?
R05: Agile é uma mentalidade (mindset) que valoriza colaboração, adaptação e entrega contínua de valor. Ela pode ser aplicada por meio de várias metodologias, como Scrum ou Kanban.
---
### Bloco 02: Scrum - Papéis
---

P06: Qual é o papel do Product Owner (PO) no Scrum?
R06: Maximizar o valor do projeto e comunicar-se com os stakeholders.

P07: Qual é a principal função do Scrum Master?
R07: Organizar a equipe para que o método Scrum seja executado de maneira satisfatória

P08: Quem forma o Time de Desenvolvimento (Dev Team)?
R08: [Desenvolvedor Front-end, Desenvolvedor Back-end, Designer UX/UI, QA/Tester, DevOps, Arquiteto de Software, Mobile Developer]

P09: Quem são os "stakeholders" de um projeto?
R09: [São todas as pessoas ou entidades que têm interesse, impacto ou são impactadas por um projeto, produto ou empresa.]

P10: O Scrum Master é o "chefe" da equipe?
R10: Não, facilita o processo, remove obstáculos e orienta a equipe, mas não tem autoridade sobre as decisões ou tarefas da equipe.

---
### Bloco 03: Scrum - Eventos
---

P11: O que significa "Sprint" no contexto do Scrum?
R11: Um sprint é um período curto e fixo em que uma equipe scrum trabalha para concluir uma quantidade definida de trabalho.

P12: Qual o objetivo da Daily Scrum (reunião diária)?
R12: O objetivo da Daily Scrum é permitir que o time sincronize suas atividades, compartilhe o progresso desde o último encontro, identifique obstáculos e planeje o trabalho até a próxima reunião, promovendo transparência e colaboração.

P13: O que acontece na Sprint Review (Revisão da Sprint)?
R13: Na Sprint Review, o time apresenta o que foi desenvolvido durante a Sprint para os stakeholders, obtém feedback e colabora na adaptação do Product Backlog, garantindo que o produto esteja sempre alinhado às necessidades do cliente.

P14: Para que serve a Sprint Retrospective (Retrospectiva da Sprint)?
R14: A Sprint Retrospective serve para que o time inspecione como foi o trabalho durante a Sprint e identifique formas de melhorar o processo. É um momento de reflexão em que a equipe avalia o que funcionou bem, o que não funcionou e como pode se tornar mais eficaz na próxima Sprint.

P15: Qual evento é usado para planejar o trabalho da Sprint?
R15: O evento usado para planejar o trabalho da Sprint é a Sprint Planning (Planejamento da Sprint). Nele, o time define quais itens do backlog serão desenvolvidos na Sprint e como será feito o trabalho para alcançá-los.

---
### Bloco 04: Scrum - Artefatos
---

P16: O que é o Product Backlog?
R16: O Product Backlog é uma lista priorizada de funcionalidades e tarefas a serem feitas no produto. É mantido pelo Product Owner e atualizado regularmente. Itens são trabalhados durante os Sprints, com foco na entrega de valor contínuo.

P17: O que é o Sprint Backlog?
R17: O Sprint Backlog é o conjunto de itens do Product Backlog selecionados para a Sprint, junto com um plano para entregar o Incremento do produto. Ele representa todo o trabalho que o time pretende realizar durante a Sprint.

P18: O que é o "Incremento do Produto"?
R18: É o resultado de um trabalho feito por uma equipe ao final de uma sprint, sendo assim mostrando um passo a frente dado para o trabalho.

P19: O que é a "Definition of Done" (Definição de Pronto)?
R19: [RESPOSTA A SER PREENCHIDA]

P20: O que é uma "User Story" (História de Usuário)?
R20: [RESPOSTA A SER PREENCHIDA]

---
### Bloco 05: Kanban
---

P21: O que é um quadro Kanban?
R21: Um quadro Kanban é uma ferramenta visual usada para gerenciar projetos e fluxos de trabalho, permitindo que equipes visualizem o trabalho, limitem o trabalho em andamento e otimizem a eficiência.

P22: Qual o objetivo de um quadro Kanban?
R22: O objetivo é ajudar uma equipe a gerenciar suas tarefas, de forma eficaz e que o trabalho flua suavemente do inicio ao fim.

P23: O que significa a sigla WIP em um quadro Kanban?
R23: A sigla WIP significa "Work In Progress" (Trabalho em Andamento)

P24: Por que é importante limitar o WIP (Trabalho em Progresso)?
R24: Para facilitar a identificação de ineficiências no fluxo de trabalho de uma equipe

P25: Kanban possui papéis definidos como o Scrum?
R25: Não, o Kanban não define papéis fixos como o Scrum. Ele é mais flexível e pode ser adaptado à equipe.

---
### Bloco 06: XP e Práticas Técnicas
---

P26: O que é Extreme Programming (XP)?
R26: É um método que auxilia no desenvolvimento de códigos, consiste em 2 desenvolvedores estarem no mesmo computador ao mesmo tempo
conferindo o código e tentando evitar erros e auxiliar na questão de lógica

P27: O que é a prática de "Pair Programming" (Programação em Par)?
R27: É uma técnica usada no XP onde dois desenvolvedores usam a mesma máquina, em que um programa e o outro revisa o código

P28: O que é "Continuous Integration" (Integração Contínua - CI)?
R28: A Integração Contínua (Continuous Integration - CI) é uma prática de desenvolvimento de software onde os desenvolvedores integram seu código em um repositório central com frequência, geralmente várias vezes ao dia.

P29: O que é "Refactoring" (Refatoração)?
R29: A refatoração de código é uma prática de desenvolvimento de software que altera a estrutura interna do código sem modificar seu comportamento externo ou afetar suas funções. Essas pequenas alterações visam tornar o código mais legível e sustentável.

P30: O que é um "burndown chart"?
R30: Um gráfico burndown é uma ferramenta visual utilizada em metodologias ágeis, como o Scrum, para acompanhar o progresso de um projeto ou sprint em relação ao tempo. 

---
### Bloco 07: Métricas Ágeis
---

P31: O que é "Velocity" (Velocidade) de uma equipe?
R31: Velocidade em termos ágeis significa a quantidade média de trabalho que uma equipe pode completar em um ciclo de entrega.
P32: O que "Lead Time" mede?
R32: [RESPOSTA A SER PREENCHIDA]

P33: O que "Cycle Time" mede?
R33: O Cycle Time, ou Tempo de Ciclo, mede o tempo que leva para concluir uma tarefa ou ciclo de trabalho, desde o momento em que ele começa até o momento em que é finalizado.

P34: Qual a diferença entre Lead Time e Cycle Time?
R34: O lead time é o tempo total desde a solicitação de um item até sua entrega, enquanto o tempo de ciclo é o tempo gasto no ciclo.

P35: O que é um CFD (Cumulative Flow Diagram)?
R35: É uma ferramenta analítica usada no método Kanban , um sistema ágil de gerenciamento de projetos

---
### Bloco 08: Lean e MVP
---

P36: O que significa a sigla MVP?
R36: MVP significa Produto Mínimo Viável. Refere-se à versão mais simples de um produto, com as funcionalidades essenciais para validar hipóteses com os usuários. O objetivo é testar o mercado e coletar feedback antes de expandir o desenvolvimento.

P37: Qual o principal objetivo de construir um MVP?
R37: [RESPOSTA A SER PREENCHIDA]

P38: Qual a relação entre a filosofia Lean e o conceito de "desperdício"?
R38: [RESPOSTA A SER PREENCHIDA]

P39: O que é o ciclo "Construir-Medir-Aprender"?
R39: É uma abordagem iterativa e fundamental na metodologia Lean Startup, onde startups e empresas buscam validar suas ideias e produtos de forma rápida e eficiente.

P40: Um protótipo é a mesma coisa que um MVP?
R40: Não, o protótipo é um produto possivelmente não funcional, apenas para executar uma ideia, já o MVP é o produto minimo em estado de funcionamento. 

---
### Bloco 09: Cultura e Escalabilidade
---

P41: O que é "Agile Coach"?
R41: [RESPOSTA A SER PREENCHIDA]

P42: O que é "Business Agility"?
R42: [RESPOSTA A SER PREENCHIDA]

P43: Cite um framework para escalar o ágil para múltiplos times (ex: SAFe, LeSS).
R43: Um exemplo de framework para escalar o ágil é o SAFe (Scaled Agile Framework), usado para coordenar múltiplos times em grandes projetos.

P44: O que é "segurança psicológica" em um time ágil?
R44: Segurança psicológica é quando os membros do time se sentem seguros para opinar, errar e fazer perguntas sem medo de julgamentos ou punições.

P45: Por que a colaboração com o cliente é um valor fundamental do ágil?
R45: A colaboração é fundamental para receber um feedback, e assim sempre manter o projeto alinhado com as expectativas do cliente.

---
### Bloco 10: Tópicos Avançados
---

P46: O que são "Spikes" em um backlog?
R46: [RESPOSTA A SER PREENCHIDA]

P47: O que é "Dívida Técnica" (Technical Debt)?
R47: Dívida Técnica (em inglês, Technical Debt) é um termo usado em 
desenvolvimento de software para descrever
o custo futuro de se escolher uma solução rápida e fácil hoje, 
ao invés de uma solução mais correta e sustentável a longo prazo.

P48: O que é "Planning Poker"?
R48: Planning Poker é uma técnica divertida e colaborativa usada por equipes ágeis 
(como em Scrum) para estimar o esforço ou complexidade de tarefas, geralmente durante 
o planejamento de uma sprint

P49: Qual a diferença entre um time "feature-driven" e um time "component-driven"?
R49: [RESPOSTA A SER PREENCHIDA]

P50: O que é "TDD" (Test-Driven Development)?
R50: É uma metodologia de desenvolvimento de software onde os testes automatizados são escritos antes do código da funcionalidade em si